set nocompatible
filetype plugin indent on
syntax on

" true color
if $TERM == 'xterm-256color-italic' || $TERM == 'tmux-256color'
    let &t_8f="\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b="\<Esc>[48;2;%lu;%lu;%lum"
    set termguicolors
endif

if $TERM == 'xterm-256color'
    set termguicolors
endif

set tabstop=4 " number of visual spaces per TAB
set softtabstop=4 " number of real spaces in tab when editing
set shiftwidth=4

set expandtab " tabs are converted to spaces
set autoindent
set smartindent

set scrolloff=8 " always show one line above and one line below the cursor
set splitright
" scroll the viewport faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
set colorcolumn=101 " show the 100 character limit line
set number " show line numbers
set relativenumber " make line numbers except current line relative to the cursor
set showcmd " show command in bottom bar
set cursorline " highlight current line
set wildmenu " visual autocomplete for command menu
set lazyredraw " redraw only when we need to.
set timeoutlen=500
set ttimeoutlen=0
set incsearch " search as characters are entered
set hlsearch " highlight matches
let mapleader=" " " leader is space
" turn off search highlight when space is pressed
nnoremap <leader>, :nohlsearch<CR>
" move backups to /tmp
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

call plug#begin('~/.vim/plugged')
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'christoomey/vim-tmux-navigator'
Plug 'jeremiahkellick/jkellick-one-dark-vim'
Plug 'scrooloose/nerdcommenter'
Plug 'leafgarland/typescript-vim'
Plug 'mattn/emmet-vim'
call plug#end()

colorscheme jkellickonedark

if has('python3')
    function FormatFile()
        let l:lines="all"
        py3f $HOME/.vim/clang-format.py
    endfunction
elseif has('python')
    function FormatFile()
        let l:lines="all"
        pyf $HOME/.vim/clang-format.py
    endfunction
endif

map <C-S> :call FormatFile()<CR>
imap <C-S> <c-o>:call FormatFile()<CR>

map <C-n> :NERDTreeToggle<CR>
