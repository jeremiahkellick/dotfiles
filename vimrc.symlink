set nocompatible
if filereadable("/usr/share/vim/google/google.vim")
  source /usr/share/vim/google/google.vim

  Glug youcompleteme-google
  Glug codefmt
  Glug codefmt-google

  nnoremap <leader>jd :YcmCompleter GoToDefinition<CR>
  if !exists("g:ycm_semantic_triggers")
     let g:ycm_semantic_triggers = {}
  endif
  let g:ycm_semantic_triggers['typescript'] = ['.']

  augroup autoformat_settings
    au FileType typescript AutoFormatBuffer clang-format
  augroup END
endif
filetype plugin indent on
syntax on

" true color
if $TERM == 'xterm-256color-italic' || $TERM == 'tmux-256color'
  let &t_8f="\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b="\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
endif

if $TERM == 'xterm-256color'
  set termguicolors
endif

set tabstop=2 " number of visual spaces per TAB
set softtabstop=2 " number of real spaces in tab when editing
set shiftwidth=2
set expandtab " tabs are converted to spaces
set scrolloff=1 " always show one line above and one line below the cursor
set backspace=eol " don't allow backspacing past the start of an insert
set splitright
" scroll the viewport faster
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>
set colorcolumn=81 " show the 80 character limit line
set number " show relative line number and absolute at cursor
set showcmd " show command in bottom bar
set cursorline " highlight current line
set wildmenu " visual autocomplete for command menu
set lazyredraw " redraw only when we need to.
set showmatch " highlight matching [{()}]
set incsearch " search as characters are entered
set hlsearch " highlight matches
let mapleader="," " leader is comma
" turn off search highlight when space is pressed
nnoremap <leader><space> :nohlsearch<CR>
" disable arrow keys in normal mode
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>
" disable arrow keys in insert mode
imap <up> <nop>
imap <down> <nop>
imap <left> <nop>
imap <right> <nop>
" move backups to /tmp
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

runtime macros/matchit.vim " required by textobj-rubyblock

call plug#begin('~/.vim/plugged')
Plug 'chr4/nginx.vim'
Plug 'kien/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'christoomey/vim-tmux-navigator'
Plug 'benmills/vimux'
Plug 'rakr/vim-one'
Plug 'scrooloose/nerdcommenter'
Plug 'leafgarland/typescript-vim'
Plug 'mattn/emmet-vim'
call plug#end()

set background=dark
colorscheme one

let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
let g:ctrlp_use_caching = 0

map <C-n> :NERDTreeToggle<CR>
